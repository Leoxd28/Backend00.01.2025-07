openapi: 3.0.0
info:
  title: Hackaton Express API
  version: "1.0"
  description: API for Hackaton Express Pro
servers:
  - url: http://localhost:3000/api
paths:
  /health:
    get:
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
  /data:
    post:
      summary: Receive JSON data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: received
  /v1/users:
    get:
      summary: List users
      responses:
        "200":
          description: OK
    post:
      summary: Create user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        "201":
          description: created
  /v1/users/{id}:
    get:
      summary: Get user by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
  /v1/orders:
    get:
      summary: List orders (protected with x-token)
      parameters:
        - in: header
          name: x-token
          schema:
            type: string
    post:
      summary: Create order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                customerId:
                  type: string
  /v1/orders/export:
    get:
      summary: Export orders CSV
  /v1/uploads/avatar:
    post:
      summary: Upload avatar (image only)
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
  /v1/payments:
    post:
      summary: Create payment (idempotent)
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                customerId:
                  type: string
  /metrics:
    get:
      summary: Metrics
